<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///variables

//position recording
mpos = 0; //selected item
mlvl = 0; //menue level

//navigation
up = 0;
down = 0;
enter = 0;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///menue items

//menue main
m[0,0] = "Unpause";
m[0,1] = "Settings";
m[0,2] = "Quit Game";

//menue Quit
m[1,0] = "Cancel";
m[1,1] = "Save and Exit";
m[1,2] = "Exit without Saving";

//menue settings
m[2,0] = "Sound effects";
m[2,1] = "Music";
m[2,2] = "Full Screen";
m[2,3] = "Back";

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///menue settings

//mouse controls
enable_mouse = true;
hor_acc = false; //whether or not it reacts when the mouse is not on top of the text)

//keyboard controls
enable_keys = true;

//font
fnt = fnt_narrate;
fr = 2/3; //font height:width ratio

//colours
norm_col = c_white;
sel_col = c_black;

//text alignment
align = fa_center; //horizontal alignment

//menue pos (origin: y is as set above, x is the top)
ax = room_width/2;
ay = 50;

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///calculations
ls = 0; //largest size of text

for (i=0; i&lt;array_height_2d(m); i+=1)
{
    for (j=0; j&lt;array_length_2d(m,i); j+=1)
    {
        if string_length(m[i,j]) &gt; ls
        {
            ls = string_length(m[i,j]);
        }
    }
}

ls *=  font_get_size(fnt);
ls *= fr;

switch align //set diff limits for diff alaignment options
{
    case fa_left:
    {
        lhlim = ax;
        rhlim = ax + ls;
        break;
    }
    
    case fa_center:
    {
        lhlim = ax - ls /2;
        rhlim = ax + ls /2;
        break;
    }
    
    case fa_right:
    {
        lhlim = ax - ls;
        rhlim = ax;
        break;
    }
    
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///background stuff
back = sprite_add(obj_pause.pause_pic, 1, false, false, 0, 0);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>file_delete(obj_pause.pause_pic);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///all le code
if enable_keys scr_menue_keys(); //get the key inputs

if up //if the up key is pressed
{
    if mpos &gt; 0 //and it isnt at the first position
    {
        mpos --; //go up one pos
    }
    else // if it is
    {
        mpos = array_length_2d(m, mlvl) - 1; //go to the bottom of the current level
    }
}

if down //vice-versa for here
{
    if mpos &lt; array_length_2d(m, mlvl) - 1
    {
        mpos ++;
    }
    else
    {
        mpos = 0;
    }
}

if enable_mouse scr_menue_mouse(); //mouse inputs

if enter
{
    scr_pause_menue_enter();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///draw the background
draw_sprite_ext(back, 0, view_xview, view_yview, 1, 1, 0, c_dkgray, 1);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// and draw it all up~
draw_set_font(fnt); //set it to menue font
draw_set_halign(align);
draw_set_valign(fa_top);

for (i=0; i&lt;array_length_2d(m,mlvl); i+=1) //for every item in current menue level
{
    if i = mpos //change colour if it is drawing the selected one.
    {
        draw_set_colour(sel_col);
    }
    else
    {
        draw_set_colour(norm_col);
    }
    
    draw_text(ax, ay + font_get_size(fnt) * 1.5 * i, m[mlvl,i]);

}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
